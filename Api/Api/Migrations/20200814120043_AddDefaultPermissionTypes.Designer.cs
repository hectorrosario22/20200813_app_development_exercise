// <auto-generated />
using System;
using Api.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20200814120043_AddDefaultPermissionTypes")]
    partial class AddDefaultPermissionTypes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Api.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EmployeeLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset>("PermissionDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<short>("PermissionTypeId")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("PermissionTypeId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Api.Domain.Entities.PermissionType", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PermissionTypes");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Description = "Matrimonio"
                        },
                        new
                        {
                            Id = (short)2,
                            Description = "Nacimiento de un hijo"
                        },
                        new
                        {
                            Id = (short)3,
                            Description = "Fallecimiento, accidente o enfermedad grave de un familiar"
                        },
                        new
                        {
                            Id = (short)4,
                            Description = "Mudanza"
                        },
                        new
                        {
                            Id = (short)5,
                            Description = "Deberes públicos"
                        },
                        new
                        {
                            Id = (short)6,
                            Description = "Función sindical o representación de trabajadores"
                        },
                        new
                        {
                            Id = (short)7,
                            Description = "Exámenes prenatales o para preparar el parto"
                        },
                        new
                        {
                            Id = (short)8,
                            Description = "Exámenes"
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.Permission", b =>
                {
                    b.HasOne("Api.Domain.Entities.PermissionType", "PermissionType")
                        .WithMany("Permissions")
                        .HasForeignKey("PermissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
